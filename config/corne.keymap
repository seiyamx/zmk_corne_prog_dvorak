/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define BT 3

// TAP_DANCE settings

#define TAP_SPEED 200

// MACROS to make the the code easier to read
// include name or reference in keymap
// Format: 
//      name        reference  key1 key2 
// #define TD_TAB      &td0    // TAB ESC
// #define TD_CAPLOCK  &td1    // LSHIFT CAPSLOCK 
// #define TD_SPC      &td2    // SPACE ENTER 
// #define TD_SLSH     &td3    // SLASH QMARK
// #define TD_QUOTE    &td4    // QUOTE DOUBLE_QUOTES
// #define TD_EQL      &td5    // EQUAL PLUS
// #define TD_BSLS     &td6    // BACKSLASH PIPE 
// #define TD_MINUS    &td7    // MINUS UNDERSCORE
// #define TD_SCLN     &td8    // SEMICOLON COLON 
// #define TD_COMM     &td9    // COMMA LESS_THAN 
// #define TD_DOT      &td10   // PERIOD GREATER_THAN 
// #define TD_BACKF    &td11   // GRAVE TILDE
// #define TD_ALT      &td12   // LALT GUI
// #define TD_ARR      &td13   // Q AT (@)
// #define TD_ATCAT    &td14   // AT CARET 
// #define TD_TAW      &td15   // TAB LWIN
// #define TD_SCLOCK   &td16   // (S)LSHIFT CAPSLOCK (Sticky shift)
// include &name in keymap to use
// FORMAT
//   natural --> (on shift)
//   number --> symbols | number code --> symbol code 
// one_lpar    1 --> (  | N1 --> LPAR
// two_par     2 --> )  | N2 --> RPAR
// three_rbrc  3 --> }  | N3 --> RBRC
// four_pl     4 --> ]  | N4 --> PLUS
// five_lbrc   5 --> {  | N5 --> RSFT
// six_rbkt    6 --> ]  | N6 --> RBKT
// seven_lbkt  7 --> [  | N7 --> LBKT
// eight_exlm  8 --> !  | N8 --> EXCL
// nine_equal  9 --> =  | N9 --> EQUAL
// zero_s      0 --> *  | N0 --> STAR
/*
// Sticky key config if desired
&sk {
    //release-after-ms = <2000>;
    quick-release;
};

*/

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp TAB>,
                <&kp ESC>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp LSHIFT>,
                <&kp CAPSLOCK>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp SPACE>,
                <&kp ENTER>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp SLASH>,
                <&kp QMARK>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp SINGLE_QUOTE>,
                <&kp DOUBLE_QUOTES>;
        };
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp EQUAL>,
                <&kp PLUS>;
        };
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp BACKSLASH>,
                <&kp PIPE>;
        };
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp MINUS>,
                <&kp UNDERSCORE>;
        };
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp SEMICOLON>,
                <&kp COLON>;
        };
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp COMMA>,
                <&kp LESS_THAN>;
        };
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_10";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp PERIOD>,
                <&kp GREATER_THAN>;
        };
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_11";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp GRAVE>,
                <&kp TILDE>;
        };
        td12: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_12";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp LALT>,
                <&kp LGUI>;
        };
        td13: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_13";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp Q>,
                <&kp AT>;
        };
        td14: tap_dance_14 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_14";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp AT>,
                <&kp CARET>;
        };
        td15: tap_dance_15 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_15";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&kp TAB>,
                <&kp LWIN>;
        };
        td16: tap_dance_16 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_16";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings =
                <&sk LSHIFT>,
                <&caps_word>;
        };

        // create the shifts of dvorak 

        seven_lbkt: seven_lbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "SEVEN_LBKT";
            #binding-cells = <0>;
            bindings =
                <&kp N7>,
                <&kp LBKT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        five_lbrc: five_lbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "FIVE_LBRC";
            #binding-cells = <0>;
            bindings =
                <&kp N5>,
                <&kp LBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        three_rbrc: three_rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_RBRC";
            #binding-cells = <0>;
            bindings =
                <&kp N3>,
                <&kp RBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        one_lpar: one_lpar {
            compatible = "zmk,behavior-mod-morph";
            label = "ONE_LPAR";
            #binding-cells = <0>;
            bindings =
                <&kp N1>,
                <&kp LPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        nine_equal: nine_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "nine_equal";
            #binding-cells = <0>;
            bindings =
                <&kp N9>,
                <&kp EQUAL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zero_s: zero_star {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_STAR";
            #binding-cells = <0>;
            bindings =
                <&kp N0>,
                <&kp STAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two_par: two_paren {
            compatible = "zmk,behavior-mod-morph";
            label = "TWO_PAR";
            #binding-cells = <0>;
            bindings =
                <&kp N2>,
                <&kp RPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        four_pl: four_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_PLUS";
            #binding-cells = <0>;
            bindings =
                <&kp N4>,
                <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        six_rbkt: six_rbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "six_rbkt";
            #binding-cells = <0>;
            bindings =
                <&kp N6>,
                <&kp RBKT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eight_exlm: eight_exlm {
            compatible = "zmk,behavior-mod-morph";
            label = "EIGHT_EXLM";
            #binding-cells = <0>;
            bindings =
                <&kp N8>,
                <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        td17: tap_dance_17 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_17";
            #binding-cells = <0>;
            bindings =
                <&str1>,
                <&str2>,
                <&str3>;
        };
    };

    // LAYERS

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        dev_mode {
            bindings = <&to 1>;
            key-positions = <36 41>;
            layers = <0>;
        };

        cfg_mode {
            bindings = <&tog 4>;
            key-positions = <37 40>;
            layers = <0 1 4>;
        };

        qwrt_mode {
            bindings = <&to 0>;
            key-positions = <36 41>;
            layers = <1>;
        };
    };

    macros {
        str1: str1 {
            compatible = "zmk,behavior-macro";
            label = "STR1";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp DLLR &kp LS(T) &kp LS(R) &kp N4 &kp T &kp N0 &kp S>;
        };
        str2: str2 {
            compatible = "zmk,behavior-macro";
            label = "STR2";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp DLLR &kp LS(T) &kp LS(R) &kp N4 &kp T &kp N0 &kp S &kp N1 &kp N9 &kp N8 &kp N5 &kp N0 &kp N0 &kp N7>;
        };
        str3: str3 {
            compatible = "zmk,behavior-macro";
            label = "STR3";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp O &kp F &kp T &kp T &kp E &kp K &kp DOT &kp N1 &kp N8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
     &td0  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y  &kp U     &kp I  &kp O     &kp P  &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H  &kp J     &kp K  &kp L      &td8           &td4
    &td12  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N  &kp M      &td9  &td10  &kp FSLH           &td6
                          &td1  &mo 2   &td2     &td2  &mo 3  &kp LALT
            >;

            label = "QWRT";
        };

        dvorak {
            // -----------------------------------------------------------------------------------------
            // |TAB:ESC   | ; : | , < | . > |  P  |  Y  |         | F   |  G   |  C  |  R  |  L  | BKSP |
            // | CTRL     |  A  |  O  |  E  |  U  |  I  |         |  D  |  H   |  T  |  N  |  S  |  DEL |
            // | LSFT:CAP |' "  | q @ | J   | K   |  X  |         |  B  |  M   |  W  |  V  |  Z  | TAB  |
            //                        | GUI | LWR | SPC |         | ENT | RSE  | ALT |

            bindings = <
&trans   &td8   &td9   &td10   &kp P   &kp Y     &kp F   &kp G   &kp C  &kp R  &kp L  &kp BSPC
&trans  &kp A  &kp O   &kp E   &kp U   &kp I     &kp D   &kp H   &kp T  &kp N  &kp S   &kp DEL
&trans   &td4  &td13   &kp J   &kp K   &kp X     &kp B   &kp M   &kp W  &kp V  &kp Z    &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "DEV";
        };

        devorak_nvfn {
            // -----------------------------------------------------------------------------------------
            // |  ESC   |  7   |  5  |  3  |  1  |  9  |            |  0  |  2  |  4  |  6  |  8  |      |
            // | F11    |  F1  |  F2 |  F3 |  F4 |  F5 |            | LFT | DWN |  UP | RGT |     |      |
            // | SHFT   |  F6  |  F7 |  F8 |  F9 |  F10|            |HOME | PGDN| PGUP| END |     |      |
            //                       |     |     |     |            |     |     |     |

            bindings = <
 &trans  &seven_lbkt  &five_lbrc  &three_rbrc  &one_lpar  &nine_equal     &zero_s  &two_par   &four_pl  &six_rbkt  &eight_exlm  &trans
&kp F11       &kp F1      &kp F2       &kp F3     &kp F4       &kp F5    &kp HOME    &kp UP    &kp END  &kp PG_UP        &none   &none
 &trans       &kp F6      &kp F7       &kp F8     &kp F9      &kp F10    &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN        &none   &none
                                       &trans     &trans       &trans      &trans    &trans     &trans
            >;

            label = "DEVF";
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  [  |  {  |  }  |  (  |  =  |       |  *  |  )  |  +  |  ]  |  !  | DEL  |
            // | CTRL |  ~  |  %  |  `  | / ? | @ ^ |       |     |     |     |     |     |      |
            // | SHFT |  $  |  &  |  #  | - _ | \ | |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC |       | ENT |     | ALT |

            bindings = <
&trans   &kp LBKT   &kp LBRC   &kp RBRC  &kp LPAR  &kp EQUAL    &kp STAR  &kp RPAR  &kp PLUS  &kp RBKT  &kp EXCL  &trans
&trans  &kp TILDE  &kp PRCNT  &kp GRAVE      &td3      &td14       &none     &none     &none     &none     &none   &none
&trans   &kp DLLR   &kp AMPS   &kp HASH      &td7       &td6       &none     &none     &none     &none     &none   &td17
                                 &trans    &trans     &trans      &trans     &none    &trans
            >;

            label = "SYM";
        };

        config {
            // -----------------------------------------------------------------------------------------
            // |  ESC |     |     |     |     |     |   |         |     |         |     |   |      |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT     | PRV |  Play/P | NXT |   |      |
            // | SHFT |     |     |     |     |     |   | MUTE    | VOL-| VOL+|   |     |   |      |
            //                    | GUI |     | SPC |   | ENT     |     | ALT |

            bindings = <
   &kp ESC         &none         &none         &none         &none    &sys_reset    &sys_reset         &none         &none       &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp LEFT    &kp C_PREV      &kp C_PP  &kp C_NEXT  &none  &none
     &none         &none         &none         &none         &none         &none    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP       &none  &none  &none
                                            &kp LGUI         &none     &kp SPACE       &kp RET         &none      &kp RALT
            >;

            label = "CFG";
        };
    };
};
